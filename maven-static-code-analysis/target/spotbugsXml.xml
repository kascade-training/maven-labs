
<BugCollection sequence='0' release='' analysisTimestamp='1578862018192' version='3.1.8' timestamp='1578862008170'><Project projectName='maven-static-code-analysis'><Jar>C:\maven-examples\maven-static-code-analysis\target\classes</Jar><SrcDir>C:\maven-examples\maven-static-code-analysis\src\main\java</SrcDir><WrkDir>C:\maven-examples\maven-static-code-analysis\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='bfb9da60f86eda35f6a3aac06407e71b' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>com.mkyong.examples.StaticCodeExample.test() concatenates strings using + in a loop</LongMessage><Class classname='com.mkyong.examples.StaticCodeExample' primary='true'><SourceLine classname='com.mkyong.examples.StaticCodeExample' start='3' end='23' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>At StaticCodeExample.java:[lines 3-23]</Message></SourceLine><Message>In class com.mkyong.examples.StaticCodeExample</Message></Class><Method isStatic='false' classname='com.mkyong.examples.StaticCodeExample' signature='()V' name='test' primary='true'><SourceLine endBytecode='195' classname='com.mkyong.examples.StaticCodeExample' start='13' end='23' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java' startBytecode='0'></SourceLine><Message>In method com.mkyong.examples.StaticCodeExample.test()</Message></Method><SourceLine endBytecode='41' classname='com.mkyong.examples.StaticCodeExample' start='18' end='18' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java' startBytecode='41' primary='true'><Message>At StaticCodeExample.java:[line 18]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='af969f063e10cd8bd07045ad4e63fb67' rank='18' abbrev='UuF' category='PERFORMANCE' priority='2' type='UUF_UNUSED_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unused field</ShortMessage><LongMessage>Unused field: com.mkyong.examples.StaticCodeExample.abc</LongMessage><Class classname='com.mkyong.examples.StaticCodeExample' primary='true'><SourceLine classname='com.mkyong.examples.StaticCodeExample' start='3' end='23' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>At StaticCodeExample.java:[lines 3-23]</Message></SourceLine><Message>In class com.mkyong.examples.StaticCodeExample</Message></Class><Field isStatic='false' classname='com.mkyong.examples.StaticCodeExample' signature='I' name='abc' primary='true'><SourceLine classname='com.mkyong.examples.StaticCodeExample' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>In StaticCodeExample.java</Message></SourceLine><Message>Field com.mkyong.examples.StaticCodeExample.abc</Message></Field><SourceLine synthetic='true' classname='com.mkyong.examples.StaticCodeExample' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>In StaticCodeExample.java</Message></SourceLine></BugInstance><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='UuF' category='PERFORMANCE' type='UUF_UNUSED_FIELD'><ShortDescription>Unused field</ShortDescription><Details>

  &lt;p&gt; This field is never used.&amp;nbsp; Consider removing it from the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugCode abbrev='UuF'><Description>Unused field</Description></BugCode><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='1' priority_2='2' total_size='13' clock_seconds='3.97' referenced_classes='12' vm_version='25.231-b11' total_bugs='2' java_version='1.8.0_231' gc_seconds='0.04' alloc_mbytes='455.50' cpu_seconds='9.72' peak_mbytes='107.54' timestamp='Sun, 12 Jan 2020 21:46:48 +0100'><FileStats path='com/mkyong/examples/StaticCodeExample.java' size='13' bugHash='155d3d6dc947b6ec27493da51590052f' bugCount='2'></FileStats><PackageStats package='com.mkyong.examples' total_bugs='2' priority_2='2' total_size='13' total_types='1'><ClassStats bugs='2' size='13' priority_2='2' interface='false' sourceFile='StaticCodeExample.java' class='com.mkyong.examples.StaticCodeExample'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='1850' totalMilliseconds='625' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='39587' standardDeviationMicrosecondsPerInvocation='3775' invocations='338'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1724' totalMilliseconds='581' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='49664' standardDeviationMicrosecondsPerInvocation='5199' invocations='337'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='16245' totalMilliseconds='194' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='148759' standardDeviationMicrosecondsPerInvocation='40451' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1966' totalMilliseconds='119' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='19052' standardDeviationMicrosecondsPerInvocation='3298' invocations='61'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='56910' totalMilliseconds='113' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='112136' standardDeviationMicrosecondsPerInvocation='55226' invocations='2'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='351' totalMilliseconds='107' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='17340' standardDeviationMicrosecondsPerInvocation='1435' invocations='305'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='7899' totalMilliseconds='94' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='27794' standardDeviationMicrosecondsPerInvocation='9700' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2906' totalMilliseconds='81' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='48505' standardDeviationMicrosecondsPerInvocation='9448' invocations='28'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='4903' totalMilliseconds='58' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='35960' standardDeviationMicrosecondsPerInvocation='10021' invocations='12'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>